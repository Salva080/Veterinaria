/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controlador.ClienteData;
import java.awt.HeadlessException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import modelo.Conexion;
import static vistas.ViewVeterinaria.escritorio;

/**
 *
 * @author NEXO-MAX
 */
public class ViewGestionClientes extends javax.swing.JInternalFrame {

    private ClienteData clienteData;
    private Conexion conexion;
    private ArrayList<Cliente> listaClientes;
    private DefaultTableModel modelo;
    /**
     * Creates new form ViewCliente
     */
    public ViewGestionClientes() {
        initComponents();
        limpiar();
        this.setSize(1010, 750);
        conexion = new Conexion();
        clienteData = new ClienteData(conexion);
        listaClientes = (ArrayList<Cliente>) clienteData.listarClienteActivos();
        listaClientes = (ArrayList<Cliente>) clienteData.listarClientesInactivos();
        
        modelo = new DefaultTableModel();
        armaCabeceraTabla();
        btAlta.setEnabled(false);
        btBaja.setEnabled(false);
        cGuardar.setToolTipText("Guardar cliente");
        cActualizar.setToolTipText("Editar cliente");
        cLimpiar.setToolTipText("Limpiar campos");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        cId = new javax.swing.JTextField();
        cBuscar = new javax.swing.JButton();
        cApellido = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cNombre = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cDireccion = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cCelular = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        alternativo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cEstado = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        rbActivos = new javax.swing.JRadioButton();
        rbNoActivos = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tClientes = new javax.swing.JTable();
        btAlta = new javax.swing.JButton();
        btBaja = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cDNI2 = new javax.swing.JTextField();
        cBuscar1 = new javax.swing.JButton();
        cDNI = new javax.swing.JTextField();
        cActualizar = new javax.swing.JButton();
        cGuardar = new javax.swing.JButton();
        cLimpiar = new javax.swing.JButton();
        cSalir = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1010, 750));
        getContentPane().setLayout(null);

        jLabel4.setFont(new java.awt.Font("Book Antiqua", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Busqueda:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 190, 87, 23);

        cId.setBackground(new java.awt.Color(255, 255, 255));
        cId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cIdKeyTyped(evt);
            }
        });
        getContentPane().add(cId);
        cId.setBounds(140, 240, 60, 30);

        cBuscar.setBackground(new java.awt.Color(255, 255, 255));
        cBuscar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cBuscar.setForeground(new java.awt.Color(0, 0, 0));
        cBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos(4).png"))); // NOI18N
        cBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(cBuscar);
        cBuscar.setBounds(210, 230, 40, 40);

        cApellido.setBackground(new java.awt.Color(255, 255, 255));
        cApellido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cApellidoFocusLost(evt);
            }
        });
        cApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cApellidoKeyTyped(evt);
            }
        });
        getContentPane().add(cApellido);
        cApellido.setBounds(140, 460, 160, 30);

        jLabel5.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Apellido:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(40, 470, 59, 17);

        jLabel6.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Nombre:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(40, 500, 57, 17);

        cNombre.setBackground(new java.awt.Color(255, 255, 255));
        cNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cNombreFocusLost(evt);
            }
        });
        cNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cNombreKeyTyped(evt);
            }
        });
        getContentPane().add(cNombre);
        cNombre.setBounds(140, 490, 160, 30);

        jLabel9.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Direcci√≥n:");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(40, 530, 64, 17);

        cDireccion.setBackground(new java.awt.Color(255, 255, 255));
        cDireccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cDireccionFocusLost(evt);
            }
        });
        cDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cDireccionKeyTyped(evt);
            }
        });
        getContentPane().add(cDireccion);
        cDireccion.setBounds(140, 520, 260, 30);

        jLabel10.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Celular:");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(40, 560, 50, 17);

        cCelular.setBackground(new java.awt.Color(255, 255, 255));
        cCelular.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cCelularFocusLost(evt);
            }
        });
        cCelular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cCelularKeyTyped(evt);
            }
        });
        getContentPane().add(cCelular);
        cCelular.setBounds(140, 550, 260, 30);

        jLabel11.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Contact. Alternativo:");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(40, 590, 140, 17);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("Ingresar cliente");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(540, 60, 150, 30);

        alternativo.setBackground(new java.awt.Color(255, 255, 255));
        alternativo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                alternativoFocusLost(evt);
            }
        });
        alternativo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                alternativoKeyTyped(evt);
            }
        });
        getContentPane().add(alternativo);
        alternativo.setBounds(210, 580, 190, 30);

        jLabel7.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Estado:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(40, 610, 48, 17);

        cEstado.setBackground(new java.awt.Color(255, 255, 255));
        cEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cEstadoActionPerformed(evt);
            }
        });
        getContentPane().add(cEstado);
        cEstado.setBounds(140, 610, 24, 24);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(30, 340, 310, 20);

        rbActivos.setBackground(new java.awt.Color(255, 255, 255));
        rbActivos.setForeground(new java.awt.Color(0, 0, 0));
        rbActivos.setText("Activos");
        rbActivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbActivosActionPerformed(evt);
            }
        });
        getContentPane().add(rbActivos);
        rbActivos.setBounds(400, 140, 90, 28);

        rbNoActivos.setBackground(new java.awt.Color(255, 255, 255));
        rbNoActivos.setForeground(new java.awt.Color(0, 0, 0));
        rbNoActivos.setText("Inactivos");
        rbNoActivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNoActivosActionPerformed(evt);
            }
        });
        getContentPane().add(rbNoActivos);
        rbNoActivos.setBounds(510, 140, 90, 28);

        tClientes.setBackground(new java.awt.Color(255, 255, 255));
        tClientes.setForeground(new java.awt.Color(0, 0, 0));
        tClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "DNI", "Apellido", "Nombre", "Direccion", "Telefono", "Contacto", "Activo"
            }
        ));
        jScrollPane1.setViewportView(tClientes);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(380, 170, 610, 150);

        btAlta.setBackground(new java.awt.Color(255, 255, 255));
        btAlta.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btAlta.setForeground(new java.awt.Color(0, 0, 0));
        btAlta.setText("Dar de Alta");
        btAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAltaActionPerformed(evt);
            }
        });
        getContentPane().add(btAlta);
        btAlta.setBounds(800, 130, 110, 35);

        btBaja.setBackground(new java.awt.Color(255, 255, 255));
        btBaja.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btBaja.setForeground(new java.awt.Color(0, 0, 0));
        btBaja.setText("Dar de Baja");
        btBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBajaActionPerformed(evt);
            }
        });
        getContentPane().add(btBaja);
        btBaja.setBounds(680, 130, 120, 35);

        jLabel3.setFont(new java.awt.Font("Leelawadee UI", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 204));
        jLabel3.setText("Buscar cliente:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(140, 90, 170, 48);

        jLabel15.setFont(new java.awt.Font("Leelawadee UI", 0, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 153, 204));
        jLabel15.setText("Agregar cliente:");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(140, 360, 170, 48);

        jLabel12.setFont(new java.awt.Font("Leelawadee UI", 0, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 153, 204));
        jLabel12.setText("Clientes");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(280, 0, 150, 48);

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setText("Buscar cliente");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(540, 30, 150, 30);

        jLabel8.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("DNI:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(40, 440, 32, 17);

        jLabel13.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("ID Cliente:");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(40, 250, 69, 17);

        jLabel14.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("DNI:");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(40, 280, 32, 17);

        cDNI2.setBackground(new java.awt.Color(255, 255, 255));
        cDNI2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cDNI2ActionPerformed(evt);
            }
        });
        cDNI2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cDNI2KeyTyped(evt);
            }
        });
        getContentPane().add(cDNI2);
        cDNI2.setBounds(140, 280, 160, 30);

        cBuscar1.setBackground(new java.awt.Color(255, 255, 255));
        cBuscar1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cBuscar1.setForeground(new java.awt.Color(0, 0, 0));
        cBuscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos(4).png"))); // NOI18N
        cBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBuscar1ActionPerformed(evt);
            }
        });
        getContentPane().add(cBuscar1);
        cBuscar1.setBounds(310, 270, 40, 40);

        cDNI.setBackground(new java.awt.Color(255, 255, 255));
        cDNI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cDNIFocusLost(evt);
            }
        });
        cDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cDNIKeyTyped(evt);
            }
        });
        getContentPane().add(cDNI);
        cDNI.setBounds(140, 430, 160, 30);

        cActualizar.setBackground(new java.awt.Color(255, 255, 255));
        cActualizar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cActualizar.setForeground(new java.awt.Color(0, 0, 0));
        cActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos (3).png"))); // NOI18N
        cActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(cActualizar);
        cActualizar.setBounds(570, 460, 70, 60);

        cGuardar.setBackground(new java.awt.Color(255, 255, 255));
        cGuardar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cGuardar.setForeground(new java.awt.Color(0, 0, 0));
        cGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos (2).png"))); // NOI18N
        cGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(cGuardar);
        cGuardar.setBounds(570, 390, 70, 60);

        cLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        cLimpiar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cLimpiar.setForeground(new java.awt.Color(0, 0, 0));
        cLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos (1).png"))); // NOI18N
        cLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(cLimpiar);
        cLimpiar.setBounds(570, 530, 70, 60);

        cSalir.setBackground(new java.awt.Color(255, 255, 255));
        cSalir.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cSalir.setForeground(new java.awt.Color(0, 0, 0));
        cSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir boton.png"))); // NOI18N
        cSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSalirActionPerformed(evt);
            }
        });
        getContentPane().add(cSalir);
        cSalir.setBounds(850, 600, 80, 80);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(40, 650, 610, 10);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/menu2.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1010, 750);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cEstadoActionPerformed

    private void cGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cGuardarActionPerformed
        int dni = Integer.parseInt(cDNI.getText());
        String apellido = cApellido.getText();
        String nombre = cNombre.getText();
        String direccion = cDireccion.getText();
        int celular = Integer.parseInt(cCelular.getText());
        String alt = alternativo.getText();
        boolean estado = cEstado.isEnabled();

        Cliente c = new Cliente(dni, nombre, apellido, direccion, celular, alt, estado);

        clienteData.agregarCliente(c);
        cId.setText(c.getIdCliente() + "");
        limpiar();

    }//GEN-LAST:event_cGuardarActionPerformed

    private void cActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cActualizarActionPerformed
        if (cId.getText() != null || cDNI.getText() != null || cApellido.getText() != null || cNombre.getText() != null || cDireccion.getText() != null || cCelular.getText() != null || alternativo.getText() != null ) {
            int id = Integer.parseInt(cId.getText());
            int dni = Integer.parseInt(cDNI.getText());
            String apellido = cApellido.getText();
            String nombre = cNombre.getText();
            String direccion = cDireccion.getText();
            int celular = Integer.parseInt(cCelular.getText());
            String alt = alternativo.getText();
            boolean estado = cEstado.isEnabled();

            Cliente c = new Cliente(dni, nombre, apellido, direccion, celular, alt, estado);
            clienteData.modificarCliente(id, c);

            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "No se pudo modificar el cliente");
        }
    }//GEN-LAST:event_cActualizarActionPerformed

    private void cLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_cLimpiarActionPerformed

    private void cBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBuscarActionPerformed
        botonesBuscar();
        activarOtros();

        Cliente c = clienteData.buscarCliente(Integer.parseInt(cId.getText()));

        int id = Integer.parseInt(cId.getText());

        if (cId.getText() != null && clienteData.clienteExiste(id)) {

            cDNI.setText(c.getDni() + "");
            cApellido.setText(c.getApellido());
            cNombre.setText(c.getNombre());
            cDireccion.setText(c.getDireccion());
            cCelular.setText(c.getTelefono() + "");
            alternativo.setText(c.getContactoAlternativo());
            cEstado.setSelected(c.isActivo());
            cGuardar.setEnabled(false);

        } else {
            JOptionPane.showMessageDialog(this, "No se encontro el cliente");
            limpiar();
        }

        //  activarOtros();
    }//GEN-LAST:event_cBuscarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        desactivarOtros();
        activarId();
        cBuscar.setEnabled(true);
        cBuscar1.setEnabled(true);
        cDNI2.setEnabled(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSalirActionPerformed
        dispose();
    }//GEN-LAST:event_cSalirActionPerformed

    private void cApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cApellidoKeyTyped
        int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;

        if (!(minusculas || mayusculas || espacio)) {
            JOptionPane.showMessageDialog(this, "El dato APELLIDO  no debe ser num√©rico");
            evt.consume();
        }

    }//GEN-LAST:event_cApellidoKeyTyped

    private void cNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cNombreKeyTyped
        int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;

        if (!(minusculas || mayusculas || espacio)) {
            JOptionPane.showMessageDialog(this, "El dato NOMBRE  no debe ser num√©rico");
            evt.consume();
        }

    }//GEN-LAST:event_cNombreKeyTyped

    private void cDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cDireccionKeyTyped

    }//GEN-LAST:event_cDireccionKeyTyped

    private void alternativoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_alternativoKeyTyped
        int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;

        if (!(minusculas || mayusculas || espacio)) {
            JOptionPane.showMessageDialog(this, "El dato Contacto alternativo  no debe ser num√©rico");
            evt.consume();
        }

    }//GEN-LAST:event_alternativoKeyTyped

    private void cDNIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cDNIFocusLost
        if (cDNI.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No puede dejar vacio este campo");
            cDNI.requestFocus();
        }
    }//GEN-LAST:event_cDNIFocusLost

    private void cApellidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cApellidoFocusLost
        if (cApellido.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No puede dejar vacio este campo");
            cApellido.requestFocus();
        }
    }//GEN-LAST:event_cApellidoFocusLost

    private void cNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cNombreFocusLost
        if (cNombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No puede dejar vacio este campo");
            cNombre.requestFocus();
        }
    }//GEN-LAST:event_cNombreFocusLost

    private void cDireccionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cDireccionFocusLost
        if (cDireccion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No puede dejar vacio este campo");
            cDireccion.requestFocus();
        }
    }//GEN-LAST:event_cDireccionFocusLost

    private void cCelularFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cCelularFocusLost
        if (cCelular.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No puede dejar vacio este campo");
            cCelular.requestFocus();
        }
    }//GEN-LAST:event_cCelularFocusLost

    private void alternativoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_alternativoFocusLost
        if (alternativo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No puede dejar vacio este campo");
            alternativo.requestFocus();
        }else{
            cGuardar.setEnabled(true);
        }
    }//GEN-LAST:event_alternativoFocusLost

    private void cIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cIdKeyTyped
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) {
            JOptionPane.showMessageDialog(this, "El dato ID debe ser num√©rico");
            evt.consume();
        }

    }//GEN-LAST:event_cIdKeyTyped

    private void cDNIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cDNIKeyTyped
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) {
            JOptionPane.showMessageDialog(this, "El dato DNI debe ser num√©rico, sin puntos.");
            evt.consume();
        }

    }//GEN-LAST:event_cDNIKeyTyped

    private void cDNI2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cDNI2KeyTyped
       int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) {
            JOptionPane.showMessageDialog(this, "El dato DNI debe ser num√©rico, sin puntos.");
            evt.consume();
        }
    }//GEN-LAST:event_cDNI2KeyTyped

    private void cBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBuscar1ActionPerformed
        botonesBuscar();
        activarOtros();

        Cliente c = clienteData.buscarClientePorDni(Integer.parseInt(cDNI2.getText()));
        
        int id = c.getIdCliente();

        if (cId.getText() != null && clienteData.clienteExiste(id)) {
            
            cId.setText(c.getIdCliente()+"");
            cDNI.setText(c.getDni() + "");
            cApellido.setText(c.getApellido());
            cNombre.setText(c.getNombre());
            cDireccion.setText(c.getDireccion());
            cCelular.setText(c.getTelefono() + "");
            alternativo.setText(c.getContactoAlternativo());
            cEstado.setSelected(c.isActivo());
            cGuardar.setEnabled(false);

        } else {
            JOptionPane.showMessageDialog(this, "No se encontro el cliente");
            limpiar();
        }
    }//GEN-LAST:event_cBuscar1ActionPerformed

    private void cDNI2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cDNI2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cDNI2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        desactivarId();
        activarOtros();
        //botonesGuardar();

        sinBotonesBuscar();
        cBuscar.setEnabled(false);
        cBuscar1.setEnabled(false);
        cDNI2.setEnabled(false);
        limpiarCampos();
        cId.setText("");
        cId.setEnabled(false);
        cGuardar.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void rbActivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbActivosActionPerformed
        rbNoActivos.setSelected(false);
        borraFilasTabla();
        cargaDatosActivos();
        btAlta.setEnabled(false);
        btBaja.setEnabled(true);
    }//GEN-LAST:event_rbActivosActionPerformed

    private void rbNoActivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNoActivosActionPerformed
        rbActivos.setSelected(false);

        borraFilasTabla();
        cargaDatosInactivos();
        btAlta.setEnabled(true);
        btBaja.setEnabled(false);
    }//GEN-LAST:event_rbNoActivosActionPerformed

    private void btAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAltaActionPerformed
        try {
            int filaSeleccionada = tClientes.getSelectedRow();

            if (filaSeleccionada != -1) {

                int idCliente = (Integer) modelo.getValueAt(filaSeleccionada, 0);

                clienteData.activarCliente(idCliente);

                boolean activo = (Boolean) modelo.getValueAt(filaSeleccionada, 7);

                borraFilasTabla();

            } else {
                JOptionPane.showMessageDialog(this, " Debe seleccionar un cliente");

            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, " No se puedo dar de alta el cliente");
        }
    }//GEN-LAST:event_btAltaActionPerformed

    private void btBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBajaActionPerformed
        try {
            int filaSeleccionada = tClientes.getSelectedRow();

            if (filaSeleccionada != -1) {

                int idCliente = (Integer) modelo.getValueAt(filaSeleccionada, 0);

                clienteData.desactivarCliente(idCliente);

                boolean activo = (Boolean) modelo.getValueAt(filaSeleccionada, 7);

                borraFilasTabla();

            } else {
                JOptionPane.showMessageDialog(this, " Debe seleccionar un cliente");

            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, " No se puedo dar de alta el cliente");
        }
    }//GEN-LAST:event_btBajaActionPerformed

    private void cCelularKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cCelularKeyTyped
     int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        
        if (!numeros) {
            JOptionPane.showMessageDialog(this, "El dato DNI debe ser num√©rico, sin puntos.");
            evt.consume();
        }
    }//GEN-LAST:event_cCelularKeyTyped
    private void limpiar() {
        cId.setText("");
        cDNI.setText("");
        cDNI2.setText("");
        cApellido.setText("");
        cNombre.setText("");
        cDireccion.setText("");
        cCelular.setText("");
        alternativo.setText("");
        cEstado.setSelected(false);
        desactivarOtros();
        desactivarId();
        botonesDesactivados();
        cDNI2.setEnabled(false);
        cBuscar1.setEnabled(false);
        cId.setEnabled(false);

    }
    private void limpiarCampos(){
        cId.setText("");
        cDNI.setText("");
        cDNI2.setText("");
        cApellido.setText("");
        cNombre.setText("");
        cDireccion.setText("");
        cCelular.setText("");
        alternativo.setText("");
        cEstado.setSelected(false);
    }

    private void activarId() {
        cId.setEnabled(true);
    }

    private void desactivarId() {
        cId.setEnabled(false);
    }

    private void activarOtros() {
        cNombre.setEnabled(true);
        cApellido.setEnabled(true);
        cEstado.setEnabled(true);
        cDNI.setEnabled(true);
        cDireccion.setEnabled(true);
        cCelular.setEnabled(true);
        alternativo.setEnabled(true);
        cId.setEnabled(true);
        cDNI2.setEnabled(true);
        cGuardar.setEnabled(true);
        
        cActualizar.setEnabled(true);

    }

    private void desactivarOtros() {
        cNombre.setEnabled(false);
        cApellido.setEnabled(false);
        cEstado.setEnabled(false);
        cDNI.setEnabled(false);
        cDireccion.setEnabled(false);
        cCelular.setEnabled(false);
        alternativo.setEnabled(false);
        cId.setEnabled(false);
        cGuardar.setEnabled(false);
        
        cActualizar.setEnabled(false);
    }

    private void botonesDesactivados() {
        cGuardar.setEnabled(false);
        
        cActualizar.setEnabled(false);
        cBuscar.setEnabled(false);
        cBuscar1.setEnabled(false);
    }

    private void botonesBuscar() {
        cActualizar.setEnabled(true);
        
    }

    private void sinBotonesBuscar() {
        cActualizar.setEnabled(false);
        
    }

    private void botonesGuardar() {
        cGuardar.setEnabled(true);
    }
    private void armaCabeceraTabla() {

        //Titulos de Columnas
        ArrayList<Object> columnas = new ArrayList<Object>();
        columnas.add("ID");
        columnas.add("DNI");
        columnas.add("Apellido");
        columnas.add("Nombre");
        columnas.add("Direccion");
        columnas.add("Telefono");
        columnas.add("Contacto");
        columnas.add("Activo");

        for (Object it : columnas) {

            modelo.addColumn(it);
        }
        tClientes.setModel(modelo);
    }

    private void borraFilasTabla() {

        int a = modelo.getRowCount() - 1;

        for (int i = a; i >= 0; i--) {

            modelo.removeRow(i);
        }
    }

    private void cargaDatosActivos() {
        borraFilasTabla();
        ArrayList<Cliente> lista = (ArrayList) clienteData.listarClienteActivos();

        for (Cliente a : lista) {

            modelo.addRow(new Object[]{a.getIdCliente(), a.getDni(), a.getApellido(), a.getNombre(), a.getDireccion(), a.getTelefono(), a.getContactoAlternativo(), a.isActivo()});
        }
    }

    private void cargaDatosInactivos() {

        borraFilasTabla();
        //Llenar filas con las materias en las que esta incripto un alumno

        ArrayList<Cliente> lista = (ArrayList) clienteData.listarClientesInactivos();

        for (Cliente a : lista) {

            modelo.addRow(new Object[]{a.getIdCliente(), a.getDni(), a.getApellido(), a.getNombre(), a.getDireccion(), a.getTelefono(), a.getContactoAlternativo(), a.isActivo()});

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alternativo;
    private javax.swing.JButton btAlta;
    private javax.swing.JButton btBaja;
    private javax.swing.JButton cActualizar;
    private javax.swing.JTextField cApellido;
    private javax.swing.JButton cBuscar;
    private javax.swing.JButton cBuscar1;
    private javax.swing.JTextField cCelular;
    private javax.swing.JTextField cDNI;
    private javax.swing.JTextField cDNI2;
    private javax.swing.JTextField cDireccion;
    private javax.swing.JCheckBox cEstado;
    private javax.swing.JButton cGuardar;
    private javax.swing.JTextField cId;
    private javax.swing.JButton cLimpiar;
    private javax.swing.JTextField cNombre;
    private javax.swing.JButton cSalir;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton rbActivos;
    private javax.swing.JRadioButton rbNoActivos;
    private javax.swing.JTable tClientes;
    // End of variables declaration//GEN-END:variables
}
